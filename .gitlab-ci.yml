default:
  image: epigenesys/rails:ruby2.6.5

  services:
    - postgres:latest

  before_script:
    - yarn install --production --cache-folder .yarn-cache
    - 'bundle config gems.shefcompsci.org.uk gitlab:${GEM_SERVER_KEY}'
    - bundle check --path vendor || bundle install --path vendor -j $(nproc)

.db-setup: &db-setup |
  cat > config/database.yml << EOF
  test:
    adapter:  postgresql
    host:     postgres
    database: ci_test
    username: runner
    password: password
  EOF

.default-cache: &default-cache
  key:
    files:
      - Gemfile.lock
      - package.json
  paths:
    - vendor/ruby
    - node_modules
    - .yarn-cache/

.pull-cache: &pull-cache
  cache:
    <<: *default-cache
    policy: pull

stages:
  - prepare
  - test
  - post-test

variables:
  POSTGRES_DB: ci_test
  POSTGRES_USER: runner
  POSTGRES_PASSWORD: password

setup-test-env:
  stage: prepare
  cache:
    <<: *default-cache
  script:
    - *db-setup
    - bundle exec rake db:reset RAILS_ENV=test
    - bundle exec rails runner -e test 'Webdrivers.install_dir = Rails.root.join("vendor", "webdrivers"); Webdrivers::Chromedriver.update'
  artifacts:
    expire_in: 1d
    paths:
      - config/database.yml

.rspec:
  stage: test
  <<: *pull-cache
  dependencies: ['setup-test-env']
  needs: ['setup-test-env']
  script:
    - bundle exec rake $CI_JOB_NAME
  artifacts:
    paths:
      - 'coverage/$CI_JOB_NAME' # look for the unique CI_JOB_NAME folder for this run
    name: 'CI_JOB_NAME Coverage' # Give it a unique artifact name
    when: always # Always extract the artifact, even if not all tests passed.
    expire_in: 1d

spec:mailers:
  extends: .rspec

spec:helpers:
  extends: .rspec

spec:models:
  extends: .rspec

spec:policies:
  extends: .rspec

spec:requests:
  extends: .rspec

# spec:system:
#   extends: .rspec

spec:validators:
  extends: .rspec

coverage:
  stage: post-test
  when: always
  <<: *pull-cache
  script:
    - bundle exec ruby lib/scripts/merge-simplecov.rb
  coverage: '/LOC \((\d+\.\d+%)\) covered.$/'
